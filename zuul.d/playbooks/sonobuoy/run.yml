- hosts: all
  tasks:
    - name: Fetch artifact
      get_url:
        url: "{{ item.url }}"
        dest: "{{ zuul.project.src_dir }}/{{ image_operating_system }}-kube-{{ kube_tag }}.qcow2"
      register: fetch_artifact
      loop: "{{ zuul.artifacts }}"
      when:
        - item.name is defined
        - item.name == "{{ image_operating_system }}-kube-{{ kube_tag }}.qcow2"

    - name: Install DevStack
      ansible.builtin.include_role:
        name: orchestrate-devstack

    - ansible.builtin.shell: "./hack/run-integration-tests.sh"
      args:
        chdir: "{{ zuul.project.src_dir }}"
      environment:
        IMAGE_NAME: "{{ image_url.split('/')[-1].split('.')[0] }}"
        KUBE_TAG: "{{ kube_tag }}"
        NETWORK_DRIVER: "{{ network_driver }}"
        OS_CLOUD: devstack

    - name: Copy Sonobuoy results to output folder
      copy:
        src: "{{ zuul.project.src_dir }}/sonobuoy-results.tar.gz"
        dest: "{{ zuul_output_dir }}/artifacts/sonobuoy-results.tar.gz"
        remote_src: true
