apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: openstack-cloud-controller-manager
  name: openstack-cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: openstack-cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: openstack-cloud-controller-manager
    spec:
      containers:
      - args:
        - /bin/openstack-cloud-controller-manager
        - --v=1
        - --cluster-name=$(CLUSTER_NAME)
        - --cloud-config=$(CLOUD_CONFIG)
        - --cloud-provider=openstack
        - --use-service-account-credentials=true
        - --bind-address=127.0.0.1
        env:
        - name: CLOUD_CONFIG
          value: /etc/config/cloud.conf
        - name: CLUSTER_NAME
          value: kubernetes
        image: registry.k8s.io/provider-os/openstack-cloud-controller-manager:v1.28.0
        name: openstack-cloud-controller-manager
        resources:
          requests:
            cpu: 200m
        volumeMounts:
        - mountPath: /etc/kubernetes/pki
          name: k8s-certs
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /etc/config/cloud.conf
          name: cloud-config-volume
          readOnly: true
        - mountPath: /etc/config/ca.crt
          name: cloud-ca-cert-volume
          readOnly: true
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: ''
      securityContext:
        runAsUser: 0
      serviceAccountName: cloud-controller-manager
      tolerations:
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: 'true'
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - hostPath:
          path: /etc/kubernetes/pki
          type: DirectoryOrCreate
        name: k8s-certs
      - hostPath:
          path: /etc/ssl/certs
          type: DirectoryOrCreate
        name: ca-certs
      - hostPath:
          path: /etc/kubernetes/cloud.conf
          type: File
        name: cloud-config-volume
      - hostPath:
          path: /etc/kubernetes/cloud_ca.crt
          type: File
        name: cloud-ca-cert-volume
  updateStrategy:
    type: RollingUpdate
