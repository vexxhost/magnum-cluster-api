---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtyZ2ViYTlKMi9EWU1ONFAyYk5oZ293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFd05ERTBNVE0xTmxvWERUSTNNREV3TXpFMApNVE0xTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvdjFtYnZteVgySmVkOFByeXBFdUlCV3pEdERCQ0FIc3I4UVE2amVHL0R1eFM5TkIKbnZRK0hVWGlHeUFscHdPNHdtUHdvQUZPN0NuK254bnNjVDhlUjFtOXZTMzZvNEk3SUFKQnh5c0JVTmR1TzQrMwpwVzZqL3YwNU1QK2dQcXJ6c3VMdm9GWXB4aElWWU1BbWpza2JTZFRJcUV1ZDdwc1U3cXIrb2J5Qm9IMEs3U3I2CkV0VXI5SHJxTlI5UlZjSG1JRGp5eDV6bnZiOEgwZU1sUFg2NXNXVk5vbVMyamF2b2p3Yk9sRnVFRHoycVlMNmEKS2EwaGxCMEVaR3JqVGFEM2wxd1RFSXVaUkQ5SFdQNjZDV2doRHoyNnBEZWh3MjFZemx5V0tsL2F2V1o1Zm5FVQpsbDlWQmNHaWVJcEdmQWpPbmZJclpDNlVpWUZtcFJHNGhma09xUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTc0YkpVMm4yY2VWc0F0bnBZL1pZQWV1NGpETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnpkck91UHJpY3NBWWhzRVFwQU8zTGRnM0tjaUdpWXJiUFc5cFkyN2Ruc0NZZlI4dERySXkrCmxFVnpURmNlUVg1cExQMDZqOHJSWmljMmR5NFVqYVpGWnlhSGtwNElCaDhLU2Q0T3g0d1hkbmJkVFVZcUMvWGsKMXdZOHJkbzBuMkdnZXhFd0VmOURyY21Qb04zOWRXUkdnY3EvTUg1U0JoemJTUlRJZnJaSjZaM1B6YitvMUdydgpuUTVpT1k1RjJnNmlrZWFZUVJZSTJ1SStzaytndGJIOW5lVTBZZmFSOFZVYjl2L3JxTnl1czZyZlIvbDFuUTdHCmRXUW1ETG9wdEdGdGI3ZXFtYmN4RGtUOGE3THFzblE5V1puUTRNVzgyN1dqM09RT01tbFYxQ3hXcEY5ZWpJOXkKUjBadVY5SXF3TXBCRU1FU3kwdlFkUVdvcmUwcmo5M0cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb3YxbWJ2bXlYMkplZDhQcnlwRXVJQld6RHREQkNBSHNyOFFRNmplRy9EdXhTOU5CCm52UStIVVhpR3lBbHB3TzR3bVB3b0FGTzdDbitueG5zY1Q4ZVIxbTl2UzM2bzRJN0lBSkJ4eXNCVU5kdU80KzMKcFc2ai92MDVNUCtnUHFyenN1THZvRllweGhJVllNQW1qc2tiU2RUSXFFdWQ3cHNVN3FyK29ieUJvSDBLN1NyNgpFdFVyOUhycU5SOVJWY0htSURqeXg1em52YjhIMGVNbFBYNjVzV1ZOb21TMmphdm9qd2JPbEZ1RUR6MnFZTDZhCkthMGhsQjBFWkdyalRhRDNsMXdURUl1WlJEOUhXUDY2Q1dnaER6MjZwRGVodzIxWXpseVdLbC9hdldaNWZuRVUKbGw5VkJjR2llSXBHZkFqT25mSXJaQzZVaVlGbXBSRzRoZmtPcVFJREFRQUJBb0lCQUFFZ2FVWFpHZitJeVloZwpaVS9ZSXc1N3Qrb2hUVVJGNXlIcjVBWUtiamR1SGpLYytqWWtFQTNadnM5Yk1JZHdBaVh0MU9yMk4xcHdpOThECnFkdTZpUFlMUzhGMEFPaUNiUEF5czh1eG8yZXdwWVZwMytZWDFyQmJoYnF0K2FpVk8rdi9uNUpuSmhERmJUcG0KK1oxQkRKdzlDVW9JZzhYemNuaVgyL3k0TmRrcklVVnk0cUxTNEtLOXFkK0tMU1VPQTk0UWVNVGdQQkxBWVpTOQpVNDBFUFhxTGc1VjRBTitORTltWDh4ZHFIRWJJV05HaG96ZytjT3hqaEtHbkdEZ0RpcjZmSjRkU29ISVBVYkZ6CnhXUG44NWNrdE0vOUhyTGdaUmY2UVhrNm51bnZxc1l6d1Vkdnh5U2o1bDN5VktmcmZ0MGgyK3FYVEYwdGM0algKUzlpSkx4VUNnWUVBMWxrbjdEMk1WZDFrbC9FUlZCTHczNno4aEF5U3I5eWM0d2JHb05rYzVQeTVrZ0pISVdkQgpIeDBFbGJPLzJqL1g2ZnRETkoxb0JCL1VZT1BFTlRvU2IrK2hqSEovNDVkdGhwc3hrRFArZnlvdzZSQ3NiRCtPCkVIMGJiYi8yVmcvTnI1L1NyS0tQRXJnYnA0dHBGZWlGZ05icGdldE1XYU9ZNzBhcXlYb1RHUHNDZ1lFQXdxbGwKNXdFUzQ5NW42cnZWRnlCQTlwVHpvRVBNRldvemVYNU9waHNJMDdKcUd5UUZwM3hYNlVjc09CdEVQbjljNzFCUQppQlpaN2hTSFd4SUt4M0lSTlo2K1paSVhKSjJ4cmppOFRIMFBmMTVpTFV4Z2I3bUJmVHB6dzR6VXo0WkdjY2pZClYzU2hCcnF4UjAzdnJ3V1U4ZDk5blZtdVE2dk9FWHRSb3RtVjdhc0NnWUJmMlhwcXY1TVRpbTdES3Y5dXN4R1gKVkFtUEd2ZzFQOWZBQlhXbzA2MkNFQ2tEUzVWM01HOEVkTHRxSGZqNnBYWHRvWGdKL1NGWVJzdDNrQ0piRXQ3UAp3ejVnU1lzNndLb3ZlUktPdzFGWW1BdExEVE90TERaZzFURUF3TWhzNzZBd21xMWdtVWlWUEZMUmR4dkV1amVJCng1R2ZrUktST3dEV2JxbE1jeFE3SlFLQmdRQ1J6cEx1bWdaTk9tejZEU0dLeGZVQy9nVVNPVlluZ0RuNE9keXQKWExpYTRSdkxJb3M5cmN5bmhsRWY0WVNYajR6TUVJdVJzN1ErdVkrOWJtRTJqVUZJdVpRQnZwQ3BNNWxBVjJ6cgptZzArcVRLK25XUHFxN2ZMVmpvWjhtWUEzNkhxWHJkMW9uMXU3ZTRWNjlHcGRuUGZURGpwNEovQVBuTUc4eWp0CjR5OERLd0tCZ0RneWdBMlhYM3JnZm1jWXpOTDZ0cldBQU9HK2pmck9FZEVCNWtZYnM4T0JONWY3L05GbHhSYnMKQ2RIWnJSaWtFbUlZVnV1NjlHeVNPdUhKOXFVaUpYditWK1UzQkNKMmxaV2UwU3ZlQmI4U3BVZkhWdlNxYXpPcgphWjhnc1ROcXAvTUltaVNEcXZFM1ZxL3JveDRnSDdoVnBEdmtBRitUZTRTWXd5N1p1TWltCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtyZ2ViYTlKMi9EWU1ONFAyYk5oZ293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFd05ERTBNVE0xTmxvWERUSTNNREV3TXpFMApNVE0xTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvdjFtYnZteVgySmVkOFByeXBFdUlCV3pEdERCQ0FIc3I4UVE2amVHL0R1eFM5TkIKbnZRK0hVWGlHeUFscHdPNHdtUHdvQUZPN0NuK254bnNjVDhlUjFtOXZTMzZvNEk3SUFKQnh5c0JVTmR1TzQrMwpwVzZqL3YwNU1QK2dQcXJ6c3VMdm9GWXB4aElWWU1BbWpza2JTZFRJcUV1ZDdwc1U3cXIrb2J5Qm9IMEs3U3I2CkV0VXI5SHJxTlI5UlZjSG1JRGp5eDV6bnZiOEgwZU1sUFg2NXNXVk5vbVMyamF2b2p3Yk9sRnVFRHoycVlMNmEKS2EwaGxCMEVaR3JqVGFEM2wxd1RFSXVaUkQ5SFdQNjZDV2doRHoyNnBEZWh3MjFZemx5V0tsL2F2V1o1Zm5FVQpsbDlWQmNHaWVJcEdmQWpPbmZJclpDNlVpWUZtcFJHNGhma09xUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTc0YkpVMm4yY2VWc0F0bnBZL1pZQWV1NGpETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnpkck91UHJpY3NBWWhzRVFwQU8zTGRnM0tjaUdpWXJiUFc5cFkyN2Ruc0NZZlI4dERySXkrCmxFVnpURmNlUVg1cExQMDZqOHJSWmljMmR5NFVqYVpGWnlhSGtwNElCaDhLU2Q0T3g0d1hkbmJkVFVZcUMvWGsKMXdZOHJkbzBuMkdnZXhFd0VmOURyY21Qb04zOWRXUkdnY3EvTUg1U0JoemJTUlRJZnJaSjZaM1B6YitvMUdydgpuUTVpT1k1RjJnNmlrZWFZUVJZSTJ1SStzaytndGJIOW5lVTBZZmFSOFZVYjl2L3JxTnl1czZyZlIvbDFuUTdHCmRXUW1ETG9wdEdGdGI3ZXFtYmN4RGtUOGE3THFzblE5V1puUTRNVzgyN1dqM09RT01tbFYxQ3hXcEY5ZWpJOXkKUjBadVY5SXF3TXBCRU1FU3kwdlFkUVdvcmUwcmo5M0cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb3YxbWJ2bXlYMkplZDhQcnlwRXVJQld6RHREQkNBSHNyOFFRNmplRy9EdXhTOU5CCm52UStIVVhpR3lBbHB3TzR3bVB3b0FGTzdDbitueG5zY1Q4ZVIxbTl2UzM2bzRJN0lBSkJ4eXNCVU5kdU80KzMKcFc2ai92MDVNUCtnUHFyenN1THZvRllweGhJVllNQW1qc2tiU2RUSXFFdWQ3cHNVN3FyK29ieUJvSDBLN1NyNgpFdFVyOUhycU5SOVJWY0htSURqeXg1em52YjhIMGVNbFBYNjVzV1ZOb21TMmphdm9qd2JPbEZ1RUR6MnFZTDZhCkthMGhsQjBFWkdyalRhRDNsMXdURUl1WlJEOUhXUDY2Q1dnaER6MjZwRGVodzIxWXpseVdLbC9hdldaNWZuRVUKbGw5VkJjR2llSXBHZkFqT25mSXJaQzZVaVlGbXBSRzRoZmtPcVFJREFRQUJBb0lCQUFFZ2FVWFpHZitJeVloZwpaVS9ZSXc1N3Qrb2hUVVJGNXlIcjVBWUtiamR1SGpLYytqWWtFQTNadnM5Yk1JZHdBaVh0MU9yMk4xcHdpOThECnFkdTZpUFlMUzhGMEFPaUNiUEF5czh1eG8yZXdwWVZwMytZWDFyQmJoYnF0K2FpVk8rdi9uNUpuSmhERmJUcG0KK1oxQkRKdzlDVW9JZzhYemNuaVgyL3k0TmRrcklVVnk0cUxTNEtLOXFkK0tMU1VPQTk0UWVNVGdQQkxBWVpTOQpVNDBFUFhxTGc1VjRBTitORTltWDh4ZHFIRWJJV05HaG96ZytjT3hqaEtHbkdEZ0RpcjZmSjRkU29ISVBVYkZ6CnhXUG44NWNrdE0vOUhyTGdaUmY2UVhrNm51bnZxc1l6d1Vkdnh5U2o1bDN5VktmcmZ0MGgyK3FYVEYwdGM0algKUzlpSkx4VUNnWUVBMWxrbjdEMk1WZDFrbC9FUlZCTHczNno4aEF5U3I5eWM0d2JHb05rYzVQeTVrZ0pISVdkQgpIeDBFbGJPLzJqL1g2ZnRETkoxb0JCL1VZT1BFTlRvU2IrK2hqSEovNDVkdGhwc3hrRFArZnlvdzZSQ3NiRCtPCkVIMGJiYi8yVmcvTnI1L1NyS0tQRXJnYnA0dHBGZWlGZ05icGdldE1XYU9ZNzBhcXlYb1RHUHNDZ1lFQXdxbGwKNXdFUzQ5NW42cnZWRnlCQTlwVHpvRVBNRldvemVYNU9waHNJMDdKcUd5UUZwM3hYNlVjc09CdEVQbjljNzFCUQppQlpaN2hTSFd4SUt4M0lSTlo2K1paSVhKSjJ4cmppOFRIMFBmMTVpTFV4Z2I3bUJmVHB6dzR6VXo0WkdjY2pZClYzU2hCcnF4UjAzdnJ3V1U4ZDk5blZtdVE2dk9FWHRSb3RtVjdhc0NnWUJmMlhwcXY1TVRpbTdES3Y5dXN4R1gKVkFtUEd2ZzFQOWZBQlhXbzA2MkNFQ2tEUzVWM01HOEVkTHRxSGZqNnBYWHRvWGdKL1NGWVJzdDNrQ0piRXQ3UAp3ejVnU1lzNndLb3ZlUktPdzFGWW1BdExEVE90TERaZzFURUF3TWhzNzZBd21xMWdtVWlWUEZMUmR4dkV1amVJCng1R2ZrUktST3dEV2JxbE1jeFE3SlFLQmdRQ1J6cEx1bWdaTk9tejZEU0dLeGZVQy9nVVNPVlluZ0RuNE9keXQKWExpYTRSdkxJb3M5cmN5bmhsRWY0WVNYajR6TUVJdVJzN1ErdVkrOWJtRTJqVUZJdVpRQnZwQ3BNNWxBVjJ6cgptZzArcVRLK25XUHFxN2ZMVmpvWjhtWUEzNkhxWHJkMW9uMXU3ZTRWNjlHcGRuUGZURGpwNEovQVBuTUc4eWp0CjR5OERLd0tCZ0RneWdBMlhYM3JnZm1jWXpOTDZ0cldBQU9HK2pmck9FZEVCNWtZYnM4T0JONWY3L05GbHhSYnMKQ2RIWnJSaWtFbUlZVnV1NjlHeVNPdUhKOXFVaUpYditWK1UzQkNKMmxaV2UwU3ZlQmI4U3BVZkhWdlNxYXpPcgphWjhnc1ROcXAvTUltaVNEcXZFM1ZxL3JveDRnSDdoVnBEdmtBRitUZTRTWXd5N1p1TWltCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtyZ2ViYTlKMi9EWU1ONFAyYk5oZ293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFd05ERTBNVE0xTmxvWERUSTNNREV3TXpFMApNVE0xTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvdjFtYnZteVgySmVkOFByeXBFdUlCV3pEdERCQ0FIc3I4UVE2amVHL0R1eFM5TkIKbnZRK0hVWGlHeUFscHdPNHdtUHdvQUZPN0NuK254bnNjVDhlUjFtOXZTMzZvNEk3SUFKQnh5c0JVTmR1TzQrMwpwVzZqL3YwNU1QK2dQcXJ6c3VMdm9GWXB4aElWWU1BbWpza2JTZFRJcUV1ZDdwc1U3cXIrb2J5Qm9IMEs3U3I2CkV0VXI5SHJxTlI5UlZjSG1JRGp5eDV6bnZiOEgwZU1sUFg2NXNXVk5vbVMyamF2b2p3Yk9sRnVFRHoycVlMNmEKS2EwaGxCMEVaR3JqVGFEM2wxd1RFSXVaUkQ5SFdQNjZDV2doRHoyNnBEZWh3MjFZemx5V0tsL2F2V1o1Zm5FVQpsbDlWQmNHaWVJcEdmQWpPbmZJclpDNlVpWUZtcFJHNGhma09xUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSTc0YkpVMm4yY2VWc0F0bnBZL1pZQWV1NGpETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnpkck91UHJpY3NBWWhzRVFwQU8zTGRnM0tjaUdpWXJiUFc5cFkyN2Ruc0NZZlI4dERySXkrCmxFVnpURmNlUVg1cExQMDZqOHJSWmljMmR5NFVqYVpGWnlhSGtwNElCaDhLU2Q0T3g0d1hkbmJkVFVZcUMvWGsKMXdZOHJkbzBuMkdnZXhFd0VmOURyY21Qb04zOWRXUkdnY3EvTUg1U0JoemJTUlRJZnJaSjZaM1B6YitvMUdydgpuUTVpT1k1RjJnNmlrZWFZUVJZSTJ1SStzaytndGJIOW5lVTBZZmFSOFZVYjl2L3JxTnl1czZyZlIvbDFuUTdHCmRXUW1ETG9wdEdGdGI3ZXFtYmN4RGtUOGE3THFzblE5V1puUTRNVzgyN1dqM09RT01tbFYxQ3hXcEY5ZWpJOXkKUjBadVY5SXF3TXBCRU1FU3kwdlFkUVdvcmUwcmo5M0cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRS1lqRTJkUmZnK3hDVDBld01hRjB3REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRBME1UUXhNelUzV2hjTk1qY3dNVEF6TVRReApNelUzV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd3NwWUVpSUhiTzlLLzY0YzQ1cmkKeTJHVkZYVldBZ3F6VlQ5aVMyQWFhQTFTeGRhV1JDWlhxekZ1Q3dCcmFSR3FBMmR6WjFVYlJ0WFVzYytPVUYxNgprbkNaZ1RTbCt2YlhmR2RlL05JT0JIVlZIWmoxUTYyTHptelN0ZmVNMjVDWE5aZVpiSVo1VTM1VG1OVDRrRzhFCkZvZjcraXNGeldvcGZCc1RQdERvUXd2eFF2NW8rV0wvTVFmOXR1YTBIN0cvZTJzQlFRWnRjeGJhVEhuRUlRVzgKUXJKcGFQajhZN0Y1Y1U3ZFJzR2pJem9WODFMMk51QjRlT0pvVmxVY3ZTZzdrQTRnTXlNa0w2UW9sQkN2YkZVdQpDYjN5aXNUNytFeFVVSkszS2VoNWUzTm9oOStIWmdLcHdhamR3eWV1ZFlXdjlIenB5Rjd6WUZpZ1VvcGFuaHhECmR3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTTytHeVZOcDluSGxiQQpMWjZXUDJXQUhydUl3ekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCUUlvSnhIR3p3eVplakRWaXk1YnlJdXR6K1hubzMKVGtxdHZDWHRrRS9yb0lvYUhBL0JLZzBQSEIxYS9PcVRrT0VOQjZVUGc0RDczU3QzeWhkdGlhYjh2YmJSd2w1MApGaWxBUUh1OE5YVGpIZVJERVB0U2NldXdPRy9XQnM1WmcxeDNIT3FaWWJzaXBtNFNWRFlPa0FHOUxyZGFUY0p6CmhpbHpGSFlCeVprR1MwenNkUkRvTHJSVjVSRUVicEdwSmxBM2ZScGYrNC9MdklOaWhTbFRQWnlESmYrVkRnYm0KeklBTnJ3QUJEcWVoeXMrVmVhQ3B3NFk2Rm1DcWVlemZ0cThoTjFMbmNJbWhxckI2YjdpUGxXTy8xU2k1WC9pUwpIVi9uRHZsM0E4K3JjOU1maTEydzAvTkxleTVjbHBmRklGTktqeXhuNXRTUXlzenBveXo3RFF4RAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3NwWUVpSUhiTzlLLzY0YzQ1cml5MkdWRlhWV0FncXpWVDlpUzJBYWFBMVN4ZGFXClJDWlhxekZ1Q3dCcmFSR3FBMmR6WjFVYlJ0WFVzYytPVUYxNmtuQ1pnVFNsK3ZiWGZHZGUvTklPQkhWVkhaajEKUTYyTHptelN0ZmVNMjVDWE5aZVpiSVo1VTM1VG1OVDRrRzhFRm9mNytpc0Z6V29wZkJzVFB0RG9Rd3Z4UXY1bworV0wvTVFmOXR1YTBIN0cvZTJzQlFRWnRjeGJhVEhuRUlRVzhRckpwYVBqOFk3RjVjVTdkUnNHakl6b1Y4MUwyCk51QjRlT0pvVmxVY3ZTZzdrQTRnTXlNa0w2UW9sQkN2YkZVdUNiM3lpc1Q3K0V4VVVKSzNLZWg1ZTNOb2g5K0gKWmdLcHdhamR3eWV1ZFlXdjlIenB5Rjd6WUZpZ1VvcGFuaHhEZHdJREFRQUJBb0lCQVFDUC9IcDFqT25vUUVvMApEVVFWaXB3eXNvTTlSV3E2UDZhb1VSNGJrWUp6ZjhXN3NBK0xlTHc5TTJDZ2lVTGNlODRzamYva1ZpaS9oN2lkClowdFBaSW9DVFhGcTdMdjBjeHArUHZzYjd6bWxXZ1g4eHVBbGt0ZFJVMmUrVXFxd2NvVVRmR2hRckdacXJXcW0KQW1kcWZHV05NaCswb0xDOVVzZ3ZrT1A4L3ZkdzlzeHdpdlRLd0IvQkEvTHRzZkRIVmJUSkRUNnpqd2xFdmt1dQpxdHpjK1h4bWhzOTQxVjB6TWFxV2NGSnZubU5sWGgvWE83T3hNUHpBTTJoMjRDOXlIWEZ3cGZ1RVhHeGJ0a0FlClUxdUhLTjFBczQ3dVZWMm5kQkdhWGhiWkhSRy9sNUt6L2dnbmNMblJSRDEzcUtJY202K3NCbWN4QjJLNENOUVUKb012amxXN2hBb0dCQU5UaE10SmJVTnlyWWpWQkF0eS85MnVFaCtoNWJmM2ZVZE5ITGxJdWllUjR3bSt2NDYwMApkSk5qdm5kazRSMUI1L3hxWFVlTGdpUWtTKytwNDhSdFJzWDRtQkkxV3BycXg2SG1FcjZGOXJKS1gyRDlJcEJ1CmdjR2JvYUZkWEJCYU1qNjhTb0pRdjRmTzExVklaVDBnTFdKaTk1emZsaW9rNjNZK3VpM1BHQ3MxQW9HQkFPby8KSWVoNXBVTU1FSUlWaEtVSnYwdHowbXVkVDRiMDhVUkFkNVZWTDFhQ2liNFM3NFo2WTRkMThzVEttWmIxOXR6Ugo3Z2s5ZlpUOEZUczJ3K0EzU3ZCNXpzKzZaWFdobWJCeDVtSTZQZWhvb3Y1Y1Z1cDNhZGREMWI5ZTZEZmFxeDF1CmttWGk3YS9iYzBsTWxWNFhadEs4K0JVMjFTY3I3MDhxb3l0L0FKMTdBb0dCQUtITGJ5YjJCR1ZUVk5jSXpEWWYKS050czVTYkpjOUdxTTdTU3V4LzNBeExFdlhMSmlnK1FlTEcwODRRbkJmbUlwOXJ1dEdxMkczbUFwTDVJcnpZUgpuK0xEYUVFZWovaUNUS3crQXkwUEFFck52K1FsUUducHMzRUU2am1NalhaWU55djdTOTN6cFQ2QTlLUjYyNGN6CnQ0cTVrVnlIaXNnSk8zU3BoRE5nM1F1cEFvR0FCNVBUUFBueVpxRFZSOS82VW54bU84S2JZKy9LeXNyUm95dVMKc3JuMnRnMnk5dnNWMUh2UkRHaThXYkZVRnBZT1RrWmNOT0JRVjZsdjVtSjNJNkdtUXZFdHgzcDRIYjRFZ3JpcwpnekR2SDcyQ3lFZWthQ0ZFd3pubWlESkJ3TXpLREVHdmFxeFVsQU85VHZtek96LzJpNHFoVzg1U1J0b2MrNnFkCmJLTEhHbEVDZ1lBdGRQOFBZRkpsY1B1THVZMkxoM2tpRHZ4UjF3NFQxeXliMit1MXVpRU9LRTBRS20rNDdYRnUKN2U3TjZLR1dIMUZseVFuVVR4QUptcmVDcjY4bFp4QUZhQWVOdXdmZTRqZHdYWm9aMHpJajVlU0FHeTg5MmZ4YwpVRnVaTmxhVkdaMm4rSXh3bWFHRlpRU2NXOGlKK005enRrZTJKTmxBT2JZSkYwZ0tHaE94ZkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.10"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.10"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
